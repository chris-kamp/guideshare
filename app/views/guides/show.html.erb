<%# Use Stripe for payment processing %>
<script src="https://js.stripe.com/v3/"></script>

<div class="container <%= "bg-light" if @guide.discarded? %>">
  <h1><%= @guide.title %></h1>
  <% if user_signed_in? && @guide.owned_by?(current_user) %>
    <h4 class="text-muted">Owned</h4>
  <% else %>
    <h4 class="text-muted"><%= @guide.price == 0.0 ? "Free" : number_to_currency(@guide.price, locale: :en) %></h4>
  <% end %>
  <h5 class="text-muted">Created by: <%= @guide.user.username %><%= " (you)" if user_signed_in? && current_user.author?(@guide) %></h5>
  <h5 class="card-subtitle mb-2 text-muted">Rating: <%= @guide.rating %></h5>
  <p class="text-muted">Tags: <%= @guide.tags.map(&:name).join(", ") %></p>

  <hr>
  <p><%= @guide.description_text %></p>
  <p>
    <% if policy(@guide).view? %>
      <%= link_to "View", view_guide_path(@guide) %>
    <% else %>
      <%# Creates form with hidden fields for "CartGuide". Posts to cart_guides#create, effectively adding a guide to user's cart. %>
      <% unless current_user.cart.guides.exists?(@guide.id) %>
        <%= button_to "Add to cart", cart_guides_path, params: { cart_guide: { cart_id: current_user.cart.id, guide_id: @guide.id } } %> | 
      <% end %>
      <%# Stripe checkout button %>
      <button id="checkout-button">Purchase</button>
    <% end %>
    <%# If user owns the guide, link to create a new review, or to edit existing review if one already made %>
    <% if @guide.owned_by?(current_user) %>
      <% unless current_user.reviewed?(@guide) %>
        |<%= link_to("Review", new_guide_review_path(guide_id: @guide.id)) %>
      <% else %>
        |<%= link_to("Edit Review", edit_review_path(current_user.review(@guide))) %>
      <% end %>
    <% end %>
    <% if policy(@guide).edit? %>
      |<%= link_to "Edit", edit_guide_path(@guide) %>
    <% end %>
    <% if policy(@guide).destroy? %>
      <%# Delete link disabled with explanatory tooltip if a guide has been purchased by one or more users %>
      <% if @guide.has_owners? %>
        |<div class="d-inline-block" data-toggle="tooltip" data-placement="bottom" title="Guides that have been purchased by users can only be archived, not deleted.">
          <%= link_to "Delete", guide_path(@guide), method: :delete, class: "btn btn-secondary disabled", data: {confirm: "Are you sure?"} %>
        </div>
      <% else %>
        |<%= link_to "Delete", guide_path(@guide), method: :delete, class: "btn btn-secondary", data: {confirm: "Are you sure?"} %>
      <% end %>
    <% end %>
    <% if policy(@guide).archive? %>
      |<%= link_to "Archive", archive_guide_path(@guide), data: {confirm: "Are you sure?"} %>
    <% elsif policy(@guide).restore? %>
      |<%= link_to "Restore", restore_guide_path(@guide), data: {confirm: "Are you sure?"} %>
    <% end %>
  </p>
  <h4>Reviews</h4>
  <hr>
  <% @reviews.each do |review| %>
    <%= render partial: "reviews/review", locals: {review: review} %>
  <% end %>
  <p><%= link_to "See all reviews", guide_reviews_path(@guide) %></p>
  <p><%= link_to "Back to guides", guides_path %></p>
</div>

<%# Add event listener to purchase button, triggering Stripe checkout %>
<script type="text/javascript">
  // Create an instance of the Stripe object with your publishable API key
  var stripe = Stripe('pk_test_51IqT8pBOC4WaG3qlSthuQrdxLLJGwe4JWOzcVZvuC1Cpah4lypBOybTlhe5ZPGwZORLrxUgV6UNm3UmoshBrBu6F00Ra3xwDxj');
  var checkoutButton = document.getElementById('checkout-button');

  checkoutButton.addEventListener('click', function() {
    // If user not signed in, send to sign in page and set the devise post-sign-in redirect page to the current url
    <% if !user_signed_in? %>
      <% session["user_return_to"] = request.url %>
      location = "<%= new_user_session_path %>"
    <% end %>
    // Create a new Checkout Session using the server-side endpoint
    fetch('/guides/<%= @guide.id %>/purchase', {
      method: 'POST',
    })
    .then(function(response) {
      return response.json();
    })
    .then(function(session) {
      return stripe.redirectToCheckout({ sessionId: session.id });
    })
    .then(function(result) {
      if (result.error) {
        alert(result.error.message);
      }
    })
    .catch(function(error) {
      console.error('Error:', error);
    });
  });
</script>